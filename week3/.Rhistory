c
c
c
c
c
c
c
c
c
c
c
c
c
c
c()
swapsp_junta("/Volumes/IAN 1/Estadisticas/Plazo/")
ruta="/Volumes/IAN 1/Estadisticas/Plazo/"
library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
off_plazo <- read.dbf("/Volumes/IAN/Estadisticas/Plazo/OFF/off_plazo_03072014.dbf")
swaps_plazo <- read.dbf("/Volumes/IAN/Estadisticas/Plazo/SWAPS/swaps_plazo_03072014.dbf")
swaps_plazo <- read.dbf("/Volumes/IAN/Estadisticas/Plazo/SWAPS/swaps_plazo_03_07_2014.dbf")
opto_plazo <- read.dbf("/Volumes/IAN/Estadisticas/Plazo/OPTO/opto_plazo_03072014.dbf")
off_contra <- read.dbf("/Volumes/IAN/Estadisticas/Contraparte/OFF/off_plazo_03072014.dbf")
off_contra <- read.dbf("/Volumes/IAN/Estadisticas/Contraparte/OFF/off_contra_03072014.dbf")
swaps_contra <- read.dbf("/Volumes/IAN/Estadisticas/Contraparte/SWAPS/swaps_contra_03_07_2014.dbf")
swaps_contra <- read.dbf("/Volumes/IAN/Estadisticas/Contraparte/SWAPS/swaps_contra_03072014.dbf")
opto_contra <- read.dbf("/Volumes/IAN/Estadisticas/Contraparte/OPTO/opto_contra_03072014.dbf")
ls()
ls()[1]
apply(ls()[1], 2, function(x) any(is.na(x)))
apply(off_plazo, 2, function(x) any(is.na(x)))
apply(off_contra, 2, function(x) any(is.na(x)))
entidad <- off_contra[is.na(off_contra$TIPO_ENTE), ]
residencia <- off_contra[is.na(off_contra$RESI), ]
sector <- off_contra[is.na(off_contra$SECTOR), ]
View(entidad)
View(sector)
levels(as.factor(entidad$CLASE_OPE))
levels(as.factor(sector$CLASE_OPE))
entidad <- split(entidad, entidad$CLASE_OPE)
View(entidad$FORWARD)
View(entidad$FUTURO)
levels(as.factor(entidad$CLASE_OPE))
levels(as.factor(sector$CLASE_OPE))
entidad$FORWARD$CLASE_OPE
entidad <- off_contra[is.na(off_contra$TIPO_ENTE), ]
residencia <- off_contra[is.na(off_contra$RESI), ]
sector <- off_contra[is.na(off_contra$SECTOR), ]
levels(as.factor(sector$CLASE_OPE))
View(sector)
sector_idspot <- sector[sector$ID_SPOT=="S", ]
apply(sector, 2, function(x) any(is.na(x)))
install.packages("Rserve")
library("Rserve", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
Rserve()
library()
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
Rserve()
install.packages(c("mgcv", "yaml"))
palindrome <- function(p){
for(i in 1:floor(nchar(p)/2)){
r <- nchar(p) - i + 1
if(substr(p, i, i) != substr(p, r, r)) {
"Esto no es un palindromo"
}
}
"Esto es un palindromo"
}
palindromo <- function(p){
for(i in 1:floor(nchar(p)/2)){
r <- nchar(p) - i + 1
if(substr(p, i, i) != substr(p, r, r)) {
"Esto no es un palindromo"
}
}
"Esto es un palindromo"
}
rm(palindrome)
palindromo("Hola")
?floor
p="Hola"
nchar(p)
nchar(p)/2
floor(nchar(p)/2)
1:floor(nchar(p)/2)
i=1
nchar(p) - i + 1
r <- nchar(p) - i + 1
substr(p, i, i)
substr(p, r, r)
i=2
r <- nchar(p) - i + 1
r
substr(p, i, i)
substr(p, r, r)
palindromo <- function(p){
for(i in 1:floor(nchar(p)/2)){
r <- nchar(p) - i + 1
if(substr(p, i, i) != substr(p, r, r)){
"Esto no es un palindromo"
} else{
"Esto es un palindromo"
}
}
}
palindromo("Hola")
palindromo <- function(p) {
for(i in 1:floor(nchar(p)/2) ) {
r <- nchar(p) - i + 1
if ( substr(p, i, i) != substr(p, r, r) ) return(FALSE)
}
TRUE
}
palindromo("Hola")
palindromo("Ana")
palindromo("reconocer")
palindromo <- function(p) {
for(i in 1:floor(nchar(p)/2) ) {
r <- nchar(p) - i + 1
if ( substr(p, i, i) != substr(p, r, r) ) return("Intentalo de nuevo")
}
"Felicidades! Tienes un palindromo en tus manos"
}
palindromo("reconocer")
conexion <- url("http://biostat.jhsph.edu/~jleek/contact.html")
HTMLCode <- readLines(conexion)
close(conexion)
head(HTMLCode)
HTMLCode[10]
nchar(HTMLCode[10])
nchar((HTMLCode)[10, 20, 30, 100])
nchar(HTMLCode[20])
nchar(HTMLCode[10])
nchar(HTMLCode[20])
nchar(HTMLCode[30])
nchar(HTMLCode[100])
class(HTMLCode)
dim(HTMLCode)
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
?read.fwf
data_fwf <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths = c(1, 2, 3))
data_fwf <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(data_fwf)
sum(head(data_fwf)[, 4])
class(data_fwf)
apply(data_fwf, 2, sum)
apply(data_fwf, 2, sum())
apply(data_fwf, 2, sum
)
str(data_fwf)
apply(data_fwf[-1], 2, sum)
View(data_fwf)
View(data_fwf)
apply(data_fwf[6, 7], 2, sum)
data_fwf[6, 7]
apply(data_fwf[, c(6, 7)], 2, sum)
sum(apply(data_fwf[, c(6, 7)], 2, sum))
sum(apply(data_fwf[, c(8, 9)], 2, sum))
sum(apply(data_fwf[, c(6, 7)], 2, sum))
apply(data_fwf[, c(6, 7)], 2, sum)
data_fwf <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
close(con)
close(con)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(12,7,4,9,4,9,4,9,4))
close(con)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(12,7,4,9,4,9,4,9,4))
close(con)
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(12,7,4,9,4,9,4,9,4))
close(con)
head(data_fwf)
class(data_fwf)
str(data_fwf)
apply(data_fwf[, c(6, 7)], 2, sum)
sum(apply(data_fwf[, c(6, 7)], 2, sum))
sum(apply(data_fwf[, c(8, 9)], 2, sum))
View(data_fwf)
sum(apply(data_fwf[, c(8, 9)], 2, sum))
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,9,4,9,4,9,4,9,4))
close(con)
View(data_fwf)
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,8,4,9,4,9,4,9,4))
close(con)
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,8,4,9,4,9,4,9,4))
close(con)
View(data_fwf)
apply(data_fwf[, c(8, 9)], 2, sum)
sum(apply(data_fwf[, c(8, 9)], 2, sum))
close(con)
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,8,4,9,4,9,4,9,4))
close(con)
View(data_fwf)
sum(apply(data_fwf[, c(8, 9)], 2, sum))
sum(data_fwf[, 4])
library(httr)
require(httpuv)
install.packages(c("httpuv", "jsonlite"))
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret="6af1109f6ecf442d292425087d49bb13d9bbe9c8")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("quiz2", "041fe7d5df66f8834c1b", secret="85ab3505e732f175f8f4369367ee4db1abdbe4a6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
output[[4]]
output[[4]]$name
lala <- output[[4]]
lala$created_at
lala$creat
list(output[[5]]$name, output[[5]]$creat)
conexion <- url("http://biostat.jhsph.edu/~jleek/contact.html")
HTMLCode <- readLines(conexion)
close(conexion)
class(HTMLCode)
head(HTMLCode)
nchar(HTMLCode[10])
nchar(HTMLCode[20])
nchar(HTMLCode[30])
nchar(HTMLCode[100])
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,8,4,9,4,9,4,9,4))
close(con)
sum(data_fwf[, 4])
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
data_recu <- read.csv("data_recu.csv", as.is = T)
data_nrec <- read.csv("data_nrec.csv", as.is = T)
setwd("~/Desktop/repos/devf/week2")
data_recu <- read.csv("data_recu.csv", as.is = T)
data_nrec <- read.csv("data_nrec.csv", as.is = T)
meta=1000
plazo=15
dias <- unique(sort(format(as.Date(data_recu$date, "%d/%m/%Y"), "%d")))
meses <- unique(sort(format(as.Date(data_recu$date, "%d/%m/%Y"), "%m")))
data_recu$date <- format(as.Date(data_recu$date, "%d/%m/%Y"), "%d/%m/%Y")
data_nrec$date <- format(as.Date(data_nrec$date, "%d/%m/%Y"), "%d/%m/%Y")
daily <- meta/plazo
income_r <- c()
for(i in 1:length(meses)){
income_dias <- c()
new_data <- subset(data_recu, format(as.Date(data_recu$date, "%d/%m/%Y"), "%m") == meses[i])
new_dias <- unique(sort(format(as.Date(new_data$date, "%d/%m/%Y"), "%d")))
for(j in 1:length(dias)){
income_dias[j] <- sum(new_data$amount[format(as.Date(new_data$date, "%d/%m/%Y"), "%d") == dias[j]
& new_data$inc == 01])
}
income_r <- c(income_r, income_dias)
}
expense_r <- c()
for(i in 1:length(meses)){
expense_dias <- c()
new_data <- subset(data_recu, format(as.Date(data_recu$date, "%d/%m/%Y"), "%m") == meses[i])
new_dias <- unique(sort(format(as.Date(new_data$date, "%d/%m/%Y"), "%d")))
for(j in 1:length(dias)){
expense_dias[j] <- sum(new_data$amount[format(as.Date(new_data$date, "%d/%m/%Y"), "%d") == dias[j]
& new_data$exp == 1])
}
expense_r <- c(expense_r, expense_dias)
}
income_n <- c()
for(i in 1:length(meses)){
income_dias <- c()
new_data <- subset(data_nrec, format(as.Date(data_nrec$date, "%d/%m/%Y"), "%m") == meses[i])
new_dias <- unique(sort(format(as.Date(new_data$date, "%d/%m/%Y"), "%d")))
for(j in 1:length(dias)){
income_dias[j] <- sum(new_data$amount[format(as.Date(new_data$date, "%d/%m/%Y"), "%d") == dias[j]
& new_data$inc == 01])
}
income_n <- c(income_n, income_dias)
}
# ===== Egresos recurrentes diarios =====
expense_n <- c()
for(i in 1:length(meses)){
expense_dias <- c()
new_data <- subset(data_nrec, format(as.Date(data_nrec$date, "%d/%m/%Y"), "%m") == meses[i])
new_dias <- unique(sort(format(as.Date(new_data$date, "%d/%m/%Y"), "%d")))
for(j in 1:length(dias)){
expense_dias[j] <- sum(new_data$amount[format(as.Date(new_data$date, "%d/%m/%Y"), "%d") == dias[j]
& new_data$exp == 1])
}
expense_n <- c(expense_n, expense_dias)
}
indicador_nrec <- income_n - expense_n
indicador_nrec
indicador_recu
indicador_recu <- income_r - expense_r
indicador_recu
sum(indicador_recu + indicador_nrec)/ndias
ndias <- as.numeric(max(as.Date(data_recu$date, "%d/%m/%Y"))-min(as.Date(data_recu$date, "%d/%m/%Y")))
cochinometro <- sum(indicador_recu + indicador_nrec)/ndias
cochinometro
cochinometro >= daily
fecha_ini <- as.Date("01/01/2014")
fecha_ini
fecha_ini <- as.Date("01/01/2014", format = "dd/mm/YYYY")
fecha_ini
fecha_ini <- as.Date("01/01/2014", format = "d/m/Y")
fecha_ini
fecha_ini <- as.Date("01/01/2014", format = "d/mm/YY")
fecha_ini
fecha_ini <- as.Date("01/01/2014", format = "dd/mm/YYYY")
fecha_ini
fecha_ini <- as.Date("01/01/2014", format = "dd/mm/YY")
fecha_ini
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
fecha_ini
fecha_ini <- format(as.Date("01/01/2014", format = "%d/%m/%Y"), "%d/%m/%Y")
fecha_ini
fecha_ini <- format(as.Date("01/01/2014", format = "%d/%m/%Y"), "%d/%m/%Y")
ndatos <- 100
(fechas <- fecha_ini + 1:ndatos)
fechas <- fecha_ini + (1:ndatos)
fecha_ini
class(fecha_ini)
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
ndatos <- 100
class(fecha_ini)
fechas <- fecha_ini + (1:ndatos)
fechas
registros <- sample(fechas, 300, T)
registros
data <- data.frame(date=registros)
View(data)
registros <- sort(sample(fechas, 300, T))
data <- data.frame(date=registros)
View(data)
registros <- sort(sample(fechas, 300, T))
data <- data.frame(date=registros)
View(data)
registros <- sort(sample(fechas, 300, T))
data <- data.frame(date=registros)
View(data)
registros <- sort(sample(fechas, 300, T))
data <- data.frame(date=registros)
View(data)
sum(0.1, 0.11, 0.9, 0.8, 0.9, 1.2, 1)
sum(0.1, 0.11, 0.09, 0.08, 0.09, 0.12, 0.1)
sum(0.1, 0.11, 0.09, 0.1, 0.11, 0.13, 0.11)
sum(0.11, 0.12, 0.1, 0.11, 0.12, 0.14, 0.12)
sum(0.12, 0.13, 0.11, 0.12, 0.13, 0.15, 0.12)
sum(0.13, 0.14, 0.11, 0.13, 0.14, 0.15, 0.12)
sum(0.13, 0.14, 0.11, 0.13, 0.14, 0.16, 0.12)
sum(0.14, 0.15, 0.12, 0.14, 0.15, 0.17, 0.13)
probas <- gl(n = 7, length = 300, labels = c(0.14, 0.15, 0.12, 0.14, 0.15, 0.17, 0.13))
probas <- gl(n = 7, k = 300, labels = c(0.14, 0.15, 0.12, 0.14, 0.15, 0.17, 0.13))
probas
c(0.14, 0.15, 0.12, 0.14, 0.15, 0.17, 0.13)
?gl
gl(2, 8, labels = c("Control", "Treat"))
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
nfechas <- 100
fechas <- fecha_ini + (1:nfechas)
ndatos <- 300
registros <- sort(sample(fechas, ndatos, T))
data <- data.frame(date=registros)
View(data)
data$amount <- runif(ndatos, 1, 500)
View(data)
data$inc <- sample(c(1, 0), 300, T, c(0.1, 0.9))
View(data)
data$exp[data$inc==0] <- 1
View(data)
data$exp <- 0
data$exp[data$inc==0] <- 1
View(data)
data$concepto <- "Aqui va un concepto"
View(data)
data_gen <- function(plazo, ndatos, prom, vari){
# ENTRADA
# plazo = Plazo para la generacion de datos
# ndatos = Numero de registros a generar
# prom = Promeio de gasto no recurrentes
# vari = Parianza de gasto no recurrentes
# SALIDA
# resultado = Dataframe con los resultados generados
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
fechas <- fecha_ini + (1:plazo)
registros <- sort(sample(fechas, ndatos, T))
data <- data.frame(date=registros)
data$amount <- rnorm(ndatos, prom, vari)
data$inc <- sample(c(1, 0), ndatos, T, c(0.1, 0.9))
data$exp <- 0
data$exp[data$inc==0] <- 1
data$concepto <- "Aqui va un concepto"
data
}
data <- data_gen(365, 700, 350, 200)
View(data)
View(data)
data <- data_gen(365, 700, 100, 200)
View(data)
data_gen <- function(plazo, ndatos, prom, vari){
# ENTRADA
# plazo = Plazo para la generacion de datos
# ndatos = Numero de registros a generar
# prom = Promeio de gasto no recurrentes
# vari = Parianza de gasto no recurrentes
# SALIDA
# resultado = Dataframe con los resultados generados
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
fechas <- fecha_ini + (1:plazo)
registros <- sort(sample(fechas, ndatos, T))
data <- data.frame(date=registros)
data$amount <- abs(rnorm(ndatos, prom, vari))
data$inc <- sample(c(1, 0), ndatos, T, c(0.1, 0.9))
data$exp <- 0
data$exp[data$inc==0] <- 1
data$concepto <- "Aqui va un concepto"
data
}
data <- data_gen(365, 700, 100, 50)
View(data)
data_nrec_gen <- function(plazo, ndatos, prom, vari){
# ENTRADA
# plazo = Plazo para la generacion de datos
# ndatos = Numero de registros a generar
# prom = Promeio de gasto no recurrentes
# vari = Parianza de gasto no recurrentes
# SALIDA
# resultado = Dataframe con los resultados generados
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
fechas <- fecha_ini + (1:plazo)
registros <- sort(sample(fechas, ndatos, T))
data <- data.frame(date=registros)
data$amount <- abs(rnorm(ndatos, prom, vari))
data$inc <- sample(c(1, 0), ndatos, T, c(0.1, 0.9))
data$exp <- 0
data$exp[data$inc==0] <- 1
data$concepto <- "Aqui va un concepto"
data
}
data <- data_gen(365, 700, 100, 50)
data <- data_nrec_gen(365, 700, 100, 50)
setwd("~/Desktop/repos/devf/week3")
write.csv(data, "data_nrec.csv")
data_nrec <- read.csv("data_nrec.csv", as.is = T)
plazo <- 365
recurrentes <- list()
recurrentes[[1]] <- "Hola"
recurrentes
recurrentes <- list()
recurrentes[1] <- "Hola"
recurrentes
recurrentes[1][1] <- "Hola"
recurrentes <- list()
recurrentes[1][1] <- "Hola"
recurrentes
recurrentes <- list()
recurrentes[1][2] <- "Hola"
recurrentes[1] <- c(1000, 15, "inc")
recurrentes <- list()
recurrentes[[1]] <- c(1000, 15, "inc")
recurrentes
recurrentes[[1]]$beca <- c(1000, 15, "inc")
recurrentes <- list()
recurrentes$beca <- c(1000, 15, "inc")
recurrentes
recurrentes$beca[1]
class(recurrentes$beca[1])
recurrentes <- list()
recurrentes$beca[1] <- 1000
recurrentes
recurrentes$beca[2] <- 15
recurrentes
recurrentes$beca[3] <- "ingreso"
recurrentes
recurrentes <- list()
recurrentes[[1]] <- list()
recurrentes
recurrentes[[1]]
recurrentes[[1]] <- [4, "gato"]
recurrentes[[1]] <- c(4, "gato")
recurrentes
recurrentes[[1]][1] <- 4
recurrentes
recurrentes[[1]][1]
recurrentes[[1]][2]
recurrentes[1][2]
recurrentes[1][1]
recurrentes <- matrix(0, 3, 3)
recurrentes
